DROP DATAVERSE geoindex IF EXISTS;
CREATE DATAVERSE geoindex;
USE geoindex;
CREATE TYPE countryType AS OPEN {
    `-car_code`: string,
    `-area`: string,
    population: string
};
CREATE DATASET country(countryType) PRIMARY KEY `-car_code`;
CREATE INDEX countryID ON country(`-car_code`) TYPE BTREE;
LOAD DATASET country USING localfs
(("path"="localhost:///home/an4021048/dev/CSE414/HW6/country.adm"),("format"="adm"));


CREATE TYPE mountainType AS OPEN{
    `-id` : string,
    `-country` : string,
    auto_id: uuid
};

CREATE DATASET mountain(mountainType) PRIMARY KEY auto_id AUTOGENERATED;
CREATE INDEX mountainID on mountain(`-country`) TYPE KEYWORD;
LOAD DATASET mountain USING localfs 
(("path"="localhost:///home/an4021048/dev/CSE414/HW6/mountain.adm"),("format"="adm"));


CREATE TYPE seaType AS OPEN{
    `-id` : string,
    `-country` : string,
    auto_id: uuid
};

CREATE DATASET sea(mountainType) PRIMARY KEY auto_id AUTOGENERATED;
CREATE INDEX seaID on sea(`-country`) TYPE KEYWORD;
LOAD DATASET sea USING localfs 
(("path"="localhost:///home/an4021048/dev/CSE414/HW6/sea.adm"),("format"="adm"));



/* Comments
Create a new dataverse called geoindex, then run the following commands:

USE geoindex;
CREATE TYPE countryType AS OPEN {
    `-car_code`: string,
    `-area`: string,
    population: string
};
CREATE DATASET country(countryType)
   PRIMARY KEY `-car_code`;
CREATE INDEX countryID ON country(`-car_code`) TYPE BTREE;
LOAD DATASET country USING localfs
    (("path"="127.0.0.1://<path to country.adm>, e.g., /hw7/data/country.adm"),("format"="adm"));

This created the type countryType, the dataset country, and a BTREE index on the attribute -car_code, which is also the primary key. Both types are OPEN, which means that they may have other fields besides the three required fields -car_code, -area, and population.
Create two new types: mountainType and seaType, and two new datasets, mountain, and sea. Both should have two required fields: -id and -country. Their key should be autogenerated, and of type uuid (see how we did it for the mondial dataset). Create an index of type KEYWORD (instead of BTREE) on the -country field (for both mountain and sea). Turn in the complete sequence of commands for creating the dataverse and all three types, datasets, and indices (for country, mountain, sea).
Recall from the lecture that Asterix only allows creating index at the top-level collection, hence we provide the country, sea, etc collections individually even though their data is already included in mondial.

Create two new types: mountainType and seaType, and two new datasets, mountain, and sea. Both should have two required fields: -id and -country. Their key should be autogenerated, and of type uuid (see how we did it for the mondial dataset). Create an index of type KEYWORD (instead of BTREE) on the -country field (for both mountain and sea). Turn in the complete sequence of commands for creating the dataverse and all three types, datasets, and indices (for country, mountain, sea).
Recall from the lecture that Asterix only allows creating index at the top-level collection, hence we provide the country, sea, etc collections individually even though their data is already included in mondial.
*/
/* 
Reference:
CREATE TYPE geo.worldType AS {auto_id:uuid};
CREATE DATASET geo.world(worldType) PRIMARY KEY auto_id AUTOGENERATED;
*/