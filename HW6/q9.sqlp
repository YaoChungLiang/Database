/*
For this query you should also measure and report the runtime;
 it may be approximate (warning: it might run for a while). 
 Find all distinct pairs of countries that share both a mountain and a sea. 
 Your query should return a list of pairs of country names. 
 Avoid including a country with itself, like in (France,France), 
 and avoid listing both (France,Korea) and (Korea,France) (not a real answer).
  Name your output attributes first_country, second_country. 
  [Result Size: 7 rows of {"first_country":..., "second_country":...}]
*/

/*
procedure:
1. create {country_code :"D", {{sea_name1, sea_name2....}}  } ( sort by country_code)
               .
               .
               .
2. create {country_code :"F", {{mountain_name1, mountain_name2 .... }} }   (sort by country code)
               .
               .
               .
3. Double for loop to check 

*/

SELECT 
DISTINCT c1.name as first_country, c2.name as second_country
FROM 
geo.world x, x.mondial.country c1, x.mondial.country c2,
x.mondial.sea s, split(s.`-country`," ") S1, split(s.`-country`, " ") S2,
x.mondial.mountain m, split(m.`-country`," ") M1, split(m.`-country`, " ") M2
WHERE 
M1 = c1.`-car_code` AND M2 = c2.`-car_code`
AND S1 = c1.`-car_code` AND S2 = c2.`-car_code`
AND c1.`-car_code` < c2.`-car_code`;
